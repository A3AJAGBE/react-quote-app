{"version":3,"sources":["App.js","reportWebVitals.js","index.js"],"names":["App","useState","quotes","setQuotes","getQuotes","fetch","then","response","json","data","randNum","Math","floor","random","length","useEffect","Twitter","icon","faTwitter","Rotate","faSpinner","QuoteRight","faQuoteRight","QuoteLeft","faQuoteLeft","Container","fluid","id","className","Card","Body","text","Title","author","Footer","Row","Col","md","Button","onClick","href","target","rel","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"sSAuEeA,EAzDH,WAEV,MAA4BC,mBAAS,IAArC,mBAAOC,EAAP,KAAeC,EAAf,KAEMC,EAAY,WAChBC,MAAM,+BAA+BC,MAAK,SAAAC,GAAQ,OAAIA,EAASC,UAAQF,MAAK,SAAAG,GAC1E,IAAMC,EAAUC,KAAKC,MAAMD,KAAKE,SAAWJ,EAAKK,QAChDX,EAAUM,EAAKC,QAInBK,qBAAU,WACRX,MACC,IAEH,IAAMY,EAAU,cAAC,IAAD,CAAiBC,KAAMC,MACjCC,EAAS,cAAC,IAAD,CAAiBF,KAAMG,MAChCC,EAAa,cAAC,IAAD,CAAiBJ,KAAMK,MACpCC,EAAY,cAAC,IAAD,CAAiBN,KAAMO,MAEzC,OACE,cAACC,EAAA,EAAD,CAAWC,OAAK,EAACC,GAAG,gBAApB,SACE,sBAAKC,UAAU,8BAA8BD,GAAG,YAAhD,UACE,oBAAIC,UAAU,yBAAd,gCAEA,eAACC,EAAA,EAAD,CAAMF,GAAG,WAAWC,UAAU,mBAA9B,UACE,cAACC,EAAA,EAAKC,KAAN,UACE,4BAAYF,UAAU,4BAA4BD,GAAG,OAArD,SACE,oBAAGC,UAAU,YAAb,UACKL,EADL,IACiBrB,EAAO6B,KADxB,IAC+BV,SAKnC,eAACQ,EAAA,EAAKG,MAAN,CAAYL,GAAG,SAASC,UAAU,YAAlC,qBAAwD1B,EAAO+B,UAE/D,cAACJ,EAAA,EAAKK,OAAN,UACI,eAACC,EAAA,EAAD,CAAKP,UAAU,2BAAf,UACE,eAACQ,EAAA,EAAD,CAAKC,GAAI,EAAGT,UAAU,0CAAtB,UACE,eAACU,EAAA,EAAD,CAAQV,UAAU,mBAAmBD,GAAG,YAAYY,QAASnC,EAA7D,UACGe,EADH,UAIA,0BAEF,cAACiB,EAAA,EAAD,CAAKR,UAAU,mBAAf,SACE,oBAAGY,KAAI,iDAA4CtC,EAAO6B,KAAnD,eAA8D7B,EAAO+B,OAArE,6CAAwHQ,OAAO,SAASC,IAAI,sBAAsBd,UAAU,sBAAsBD,GAAG,cAA5M,UAA2NX,EAA3N,4BChDH2B,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBvC,MAAK,YAAkD,IAA/CwC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOF,GACPG,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAQN,OCDdO,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1BZ,M","file":"static/js/main.0811c661.chunk.js","sourcesContent":["import './App.css';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { faTwitter } from '@fortawesome/free-brands-svg-icons';\nimport { faSpinner, faQuoteRight, faQuoteLeft } from '@fortawesome/free-solid-svg-icons';\nimport Container from 'react-bootstrap/Container';\nimport Card from 'react-bootstrap/Card';\nimport Row from 'react-bootstrap/Row';\nimport Col from 'react-bootstrap/Col';\nimport Button from 'react-bootstrap/Button';\n\nimport {React, useState, useEffect} from 'react';\n\n\nconst App = () => {\n\n  const [quotes, setQuotes] = useState('');\n\n  const getQuotes = () => {\n    fetch(\"https://type.fit/api/quotes\").then(response => response.json()).then(data => {\n      const randNum = Math.floor(Math.random() * data.length);\n      setQuotes(data[randNum]);\n    });\n  }\n\n  useEffect(() => {\n    getQuotes();\n  }, []);\n\n  const Twitter = <FontAwesomeIcon icon={faTwitter} />\n  const Rotate = <FontAwesomeIcon icon={faSpinner} />\n  const QuoteRight = <FontAwesomeIcon icon={faQuoteRight} />\n  const QuoteLeft = <FontAwesomeIcon icon={faQuoteLeft} />\n\n  return (\n    <Container fluid id=\"App-Container\">\n      <div className=\"Quote-Div text-center w-100\" id=\"quote-box\">\n        <h1 className=\"display-4 fw-bold mb-4\">A3AJAGBE Quote App</h1>\n\n        <Card id=\"App-Card\" className=\"col-lg-6 mx-auto\">\n          <Card.Body>\n            <blockquote className=\"blockquote mb-0 text-wrap\" id=\"text\">\n              <p className=\"mb-2 fs-1\">\n                  {QuoteLeft} {quotes.text} {QuoteRight}\n              </p>\n            </blockquote>\n          </Card.Body>\n\n          <Card.Title id=\"author\" className=\"lead fs-4\"> &mdash; {quotes.author}</Card.Title>\n\n          <Card.Footer>\n              <Row className=\"flex-md-row-reverse my-2\">\n                <Col md={6} className=\"d-grid d-md-flex justify-content-md-end\">\n                  <Button className=\"btn btn-lg coral\" id=\"new-quote\" onClick={getQuotes}>\n                    {Rotate} New \n                  </Button>\n\n                  <hr />\n                </Col>\n                <Col className=\"d-grid d-md-flex\">\n                  <a href={`https://twitter.com/intent/tweet?text=\"${quotes.text}\" - ${quotes.author} via https://pc-quotes-api.herokuapp.com/`} target=\"_blank\" rel=\"noopener noreferrer\" className=\"btn btn-lg btn-info\" id=\"tweet-quote\">{Twitter} Tweet</a>\n                </Col>\n              </Row>\n          </Card.Footer>\n\n        </Card>\n      </div>\n    </Container>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}